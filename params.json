{"name":"HDFWeb","tagline":"A browser-based HDF5 image viewer","body":"![HDFWeb Logo](http://i.imgur.com/6mlZGk6.jpg)\r\n\r\n#HDFWeb Specification\r\nThis document describes HDFWeb, a system designed to allow remote viewing of raster images stored in the HDF5 file format in-browser. \r\n\r\nThis software is pre-alpha, so this document is subject to change.\r\n\r\n##Purpose\r\n\r\nOne of NEMALOAD's goals is to generate public interest in science through openness. There are a number of factors which make it very difficult for the general public to view the processed data we generate at the moment, such as prohibitive size, uncommon data formats, and custom software which is difficult to build. To facilitate delivering visualizations to the public, we are writing HDFView.\r\n\r\nHDFView is a work that will continue to grow as the project does. While the first release of the software will only support viewing raw microscope images and videos, features which will be added in later releases include support for GLSL shaders for raytracing, as well as 3D visualizations of tomographic data. This will allow unprecedented public access to the data.\r\n\r\n##Design Overview\r\n\r\nAll data is backed up and stored for internal distribution on S3. From there, the web server keeps in sync via the _s3cmd sync_ tool. The webserver consists of three parts:\r\n\r\n* The file daemon retrieves file information, performs necessary file conversions, updates the database, and pulls new files from S3 when necessary.\r\n\t\r\n* The web server program provides resource information stored in the database via a RESTful API. \r\n\t\r\n* A fast reverse proxy, such as nginx, provides access to the PNGs stored on the server.\r\n\t\r\nThe client software is written in Javascript and WebGL. It consists of:\r\n\t\r\n* An UI in which the user can browse files, see file details, and proceed with visualization.\r\n\t\r\n* HTML5 Cache in which the large images are stored.\r\n\t\r\n* WebGL shaders written in GLSL which process the data and provide interactivity.\r\n\r\n\r\n![HDFWeb Design Draft](http://i.imgur.com/YKpCdZk.png)\r\n\r\n##API\r\n\r\n### Notes\r\n\r\nThe only verb that the client will utilize is GET. POST, PUT, and DELETE will be used by the server file daemon to maintain the database, and as such, access should be restricted.\r\n\r\n### Resources\r\n\r\n\r\n#### Collections\r\nCollections consist of one or more HDF5 files.\r\n* GET collections\r\n\t* Returns all names and IDs of collections on the server.\r\n\r\n```GET collections```\r\n```json\r\n{\r\n   \"collections\":[\r\n      {\r\n         \"name\":\"worms\",\r\n         \"id\":\"5sa35gbmle\"\r\n      },\r\n      {\r\n         \"name\":\"flies\",\r\n         \"id\":\"2za32gb5el\"\r\n      }\r\n   ]\r\n}\r\n```\r\n\r\n* GET collections/:id\r\n\t* Returns a list of all files and file IDs in the specified collection\r\n\r\n```GET collections/2za32gb5el```\t\r\n```json\r\n{\r\n   \"files\":[\r\n      {\r\n         \"name\":\"Epi_63xZeiss_1.4_3beads_w_lenses1.hdf5\",\r\n         \"id\":\"AofWKYWz6Q\"\r\n      },\r\n      {\r\n         \"name\":\"Kohler_63xZeiss_1.4_pollen_wo_lenses.hdf5\",\r\n         \"id\":\"GiELmFmpdZ\"\r\n      }\r\n   ]\r\n}\r\n```\r\n\r\n* POST collections\r\n\t* Creates a new collection with the specified name.\r\n* PUT collections/:id\r\n\t* Updates the specified collection by adding files through their id.\r\n* DELETE collections/:id\r\n\t* Deletes the specified collection.\r\n\r\n#### Files\r\n\r\nFiles consist of one or more groups. They also have non-HDF5 related properties such as size and modification date.\r\n* GET files\r\n\t* Get a list of all files\r\n\r\n```GET files```\r\n```json\r\n\r\n{\r\n    \"files\":[{\r\n            \"name\": \"Epi_63xZeiss_1.4_3beads_w_lenses1.hdf5\",\r\n            \"id\": \"AofWKYWz6Q\"\r\n        }, {\r\n            \"name\": \"Kohler_63xZeiss_1.4_pollen_wo_lenses.tif\",\r\n            \"id\": \"GiELmFmpdZ\"\r\n        }, {\r\n            \"name\": \"MT21063_video11.hdf5\",\r\n            \"id\": \"66vd2RGEXm\"\r\n    }]\r\n\r\n}\r\n```\r\n* GET files/:id\r\n\t* Get the metadata of the given file\r\n\r\n``` GET files/66vd2RGEXm```\r\n```json\r\n{\r\n   \"metadata\":[\r\n      {\r\n         \"name\":\"MT21063_video11.hdf5\",\r\n         \"size\":2367970585,\r\n         \"modified\":\"2003-08-04 12:30:45\",\r\n         \"path\":\"/this/is/not/secure/so/needs/authentication/at/some/point\",\r\n         \"groups\":[\r\n            {\r\n               \"name\":\"frames\",\r\n               \"id\":\"CkaRvZe3A5\"\r\n            }\r\n         ]\r\n      }\r\n   ]\r\n}\r\n```\r\n* POST files\r\n\t* Registers a file in the database from it's path on the machine.\r\n* PUT files/:id\r\n\t* Queues an update of that file's data by the maintenance script\r\n* DELETE files/:id\r\n\t* Deletes a file from the database(stays on local machine)\r\n\r\n#### Groups\r\n\r\nGroups consist of one or more datasets, each representing an image frame in the current use case.\r\n\r\n* GET groups/:id\r\n\t* Get the HDF5 metadata of the given group.\r\n\r\n```GET groups/CkaRvZe3A5```\r\n```json\r\n{\r\n   \"metadata\":[\r\n      {\r\n         \"name\":\"frames\",\r\n         \"size\":1,\r\n         \"attributes\":[\r\n            {\r\n               \"createdAt\":[\r\n                  {\r\n                     \"value\":\"2013-05-25 04:01:45\",\r\n                     \"type\":\"String, length=19\",\r\n                     \"size\":1\r\n                  }\r\n               ]\r\n            },\r\n            {\r\n               \"numFrames\":[\r\n                  {\r\n                     \"value\":1,\r\n                     \"type\":\"64-bit integer\",\r\n                     \"size\":1\r\n                  }\r\n               ]\r\n            },\r\n            {\r\n               \"originalName\":[\r\n                  {\r\n                     \"value\":\"Epi_63xZeiss_1.4_3beads_w_lenses1.hdf5\",\r\n                     \"type\":\"String, length=33\",\r\n                     \"size\":1\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      }\r\n   ]\r\n}\r\n```\r\n* POST groups\r\n\t* Adds a group\r\n* PUT groups/:id\r\n\t* Updates a group\r\n* DELETE groups/:id\r\n\t* Removes a group\r\n\r\n#### Datasets\r\n\r\nDatasets are multidimensional arrays containing grayscale image data. These correspond to image frames. These also may contain metadata.\r\n* GET datasets/metadata\r\n\t* Returns metadata information on all datasets\r\n* GET datasets/metadata/:id\r\n\t* Returns the metadata of the given dataset.\r\n* GET datasets/data/:id\r\n\t* Returns the link to the  PNG representation of the given dataset\r\n* POST datasets\r\n\t* Adds a dataset\r\n* PUT datasets/:id\r\n\t* Edits a dataset\r\n* DELETE datasets/:id\r\n\t* Deletes a dataset\r\n\r\n\r\n## Implementation Notes\r\n\r\nFor the client side, Backbone.js will be utilized for large portions of the UI. While the server will be eventually written in OpenResty for speed, due to lack of experience with that web framework portions of the infrastructure will be written in server-side Javascript and then ported to OpenResty to save time and confusion. The server-daemon will be written in a fast scripting language, probably Go, due to the amount of related utility code NEMALOAD has written.\r\n\r\n## Licensing\r\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}